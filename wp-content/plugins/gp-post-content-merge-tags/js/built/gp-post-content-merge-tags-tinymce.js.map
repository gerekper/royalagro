{"version":3,"file":"gp-post-content-merge-tags-tinymce.js","mappings":"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","sources":["webpack:///./js/src/helpers/truncateMiddle.ts","webpack:///./js/src/helpers/getMenuItems.ts","webpack:///./js/src/tinymce.ts"],"sourcesContent":["export default function truncateMiddle( text: string, length: number ) {\n\n    if( ! text || text.length <= length ) {\n        return text;\n    }\n\n    var halfLength = length / 2;\n\n    return text.substr( 0, halfLength ) + '...' + text.substr( text.length - ( halfLength - 1 ), halfLength );\n}","import truncateMiddle from \"./truncateMiddle\";\n\nconst $ = window.jQuery;\n\nexport default function getMenuItems(value: number, showBackItem: boolean = true) {\n\n    const { ajaxurl, gppcmtData } = window;\n\n    return $.when( $.post( ajaxurl, {\n        action: 'gppcmt_get_form',\n        nonce:  gppcmtData.nonce,\n        formId: value,\n        postId: gppcmtData.postId\n    }) ).then(function( response ) {\n\n        var result = $.parseJSON( response ),\n            items  = [];\n\n        // if single form is returned get field merge tags\n        if( result.id ) {\n\n            if (showBackItem) {\n                items.push( {\n                    text: 'â†© View All Forms',\n                    type: 'back',\n                    value: -1\n                }, {\n                    text: '-'\n                } );\n            }\n\n            if( typeof window.gf_vars == 'undefined' ) {\n                window.gf_vars = {};\n            }\n\n            window.form = result;\n            window.gf_vars.mergeTags = result.mergeTags;\n\n            var GFMergeTags = new window.gfMergeTagsObj( result ),\n                mergeTags   = GFMergeTags.getMergeTags( result.fields, '#content' );\n\n            for( var group in mergeTags ) {\n\n                if( ! mergeTags.hasOwnProperty( group ) ) {\n                    continue;\n                }\n\n                var label = mergeTags[ group ].label,\n                    tags  = mergeTags[ group ].tags;\n\n                // skip groups without any tags\n                if( tags.length <= 0 ) {\n                    continue;\n                }\n\n                if( label ) {\n                    items.push( {\n                        text: '-'\n                    }, {\n                        text: '- ' + label + ' -',\n                        classes: 'header'\n                    } );\n                }\n\n                for( var i = 0; i < tags.length; i++ ) {\n                    items.push( {\n                        type: 'field',\n                        text: truncateMiddle( tags[ i ].label, 40 ),\n                        value: tags [ i ].tag,\n                        classes: 'field'\n                    } );\n                }\n\n            }\n\n        }\n        // otherwise, prepare our forms as menu items\n        else {\n\n            items.push( {\n                text: '- Select a Form -',\n                classes: 'header'\n            } );\n\n            for( var i = 0; i < result.length; i++ ) {\n                items.push( {\n                    type:  'form',\n                    text:  result[i].title,\n                    value: result[i].id,\n                    classes: 'form'\n                } );\n            }\n        }\n\n        return $.when(items);\n\n    });\n\n}","import getMenuItems from \"./helpers/getMenuItems\";\n\nconst $ = window.jQuery;\n\nlet currentForm:number | null = null;\nlet tinymceMenuInitialized:boolean = false; // will be populated progressively as the user makes selections\n\nconst { gppcmtData } = window;\n\nwindow.tinymce.PluginManager.add( 'gppcmt', function( editor: any, url: string ) {\n\n    editor.addButton( 'gppcmt', {\n        type: 'menubutton',\n        title: 'Insert Gravity Forms Merge Tags',\n        image: gppcmtData.gfBaseUrl + '/images/icon-drop-list.png',\n        classes: 'gppcmt',\n        menu: []\n    } );\n\n    // tinymce takes a second to actually create the button, poll until button exists before initializing the menu\n    var initPoll = setInterval( function() {\n        if( editor.controlManager.buttons.gppcmt ) {\n            clearInterval( initPoll );\n            updateTinymceMenu( gppcmtData.initFormId );\n        }\n    }, 100 );\n\n    function populateMenu( items ) {\n        // reset menu items\n        editor.buttons.gppcmt.menu.splice( 0, editor.buttons.gppcmt.menu.length );\n\n        for( var i = 0; i < items.length; i++ ) {\n\n            editor.buttons.gppcmt.menu.push( {\n                text: items[i].text,\n                classes: items[i].classes,\n                onclick: function( item ) {\n                    handleTinymceMenuSelection( this.type, this.value );\n                }.bind( items[i] )\n            } );\n\n        }\n    }\n\n    function handleTinymceMenuSelection( type, value ) {\n\n        switch( type ) {\n            case 'form':\n                currentForm = parseInt( value );\n                updateTinymceMenu( currentForm );\n                break;\n            case 'back':\n                currentForm = null;\n                updateTinymceMenu( 0 );\n                break;\n            case 'field':\n                editor.insertContent( String( value ) );\n                break;\n        }\n\n    }\n\n    function updateTinymceMenu( value ) {\n\n        if( typeof value == 'undefined' ) {\n            value = 0;\n        }\n\n        // fetch new menu items\n        var $button = $( editor.controlManager.buttons.gppcmt.$el.find( 'button' ) );\n\n        if( ! $button.data( 'content' ) ) {\n            $button.data( 'content', $button.html() );\n        }\n\n        $button.html( '<span style=\"display:inline-block;width:20px;height:20px;padding:0;text-align:center;\"><img src=\"' + gppcmtData.gfBaseUrl + '/images/spinner.gif\" style=\"margin-top:2px;\" /></span>' );\n\n        getMenuItems( value ).done(function(items) {\n            $button.html( $button.data( 'content' ) );\n\n            // add the retrieved menu items\n            populateMenu( items );\n\n            // force the menu to redraw\n            editor.controlManager.buttons.gppcmt.menu = null;\n\n            // show the menu\n            if( tinymceMenuInitialized && $( editor.getContainer() ).is( ':visible' ) ) {\n                editor.controlManager.buttons.gppcmt.showMenu();\n            }\n\n            tinymceMenuInitialized = true;\n        });\n\n    }\n\n} );\n"],"names":["truncateMiddle","text","length","halfLength","substr","$","window","jQuery","tinymceMenuInitialized","gppcmtData","tinymce","PluginManager","add","editor","url","addButton","type","title","image","gfBaseUrl","classes","menu","initPoll","setInterval","controlManager","buttons","gppcmt","clearInterval","updateTinymceMenu","initFormId","handleTinymceMenuSelection","value","parseInt","insertContent","String","$button","$el","find","data","html","showBackItem","ajaxurl","when","post","action","nonce","formId","postId","then","response","result","parseJSON","items","id","push","gf_vars","form","mergeTags","gfMergeTagsObj","getMergeTags","fields","group","hasOwnProperty","label","tags","i","tag","getMenuItems","done","splice","onclick","item","this","bind","populateMenu","getContainer","is","showMenu"],"sourceRoot":""}