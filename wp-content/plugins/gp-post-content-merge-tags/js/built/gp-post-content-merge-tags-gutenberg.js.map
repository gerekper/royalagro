{"version":3,"file":"gp-post-content-merge-tags-gutenberg.js","mappings":"mBAAA,MAAM,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAc,WCAxD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAS,M,mNCWzD,QATc,SAACC,GAAU,OACrB,yBAAKC,QAAQ,iBAAiBC,MAAO,GAAIC,OAAQ,IAAQH,GACrD,wBACII,KAAK,UACLC,EAAE,0fCNd,IAAMC,EAAIP,OAAOQ,O,+MC4BXC,GAAgB,IAAAC,6BAA2B,SAACC,GAC9C,OAAO,SAACV,GACE,OAA4B,IAAAW,UAAS,MAApCC,EAAS,KAAEC,EAAY,KAa9B,OAXA,IAAAC,YAAU,W,eACgB,QAAjB,EAAAf,OAAOgB,kBAAU,eAAEC,c,OAIvB,E,OAAA,E,EAAA,W,6lCACgB,OAAb,EAAAH,EAAa,IDpCQI,ECoC8B,QAAjB,EAAAlB,OAAOgB,kBAAU,eAAEC,WDnC1DE,EAAuBnB,OAAM,QAApBgB,EAAchB,OAAM,WAE/BgB,EAAWI,QAAWF,EAIpBX,EAAEc,KAAKd,EAAEe,KAAKH,EAAS,CAC1BI,OAAQ,kBACRC,MAAOR,EAAWQ,MAClBC,OAAQP,EACRE,OAAQJ,EAAWI,UACnBM,MAAK,SAAUC,GACf,IAAIC,EAASrB,EAAEsB,UAAUF,GAGzB,GAAIC,EAAOE,GAAI,MACkB,IAAlB9B,OAAO+B,UACd/B,OAAO+B,QAAU,IAGrB/B,OAAOgC,KAAOJ,EACd5B,OAAO+B,QAAQlB,UAAYe,EAAOf,UAElC,IAAIoB,EAAc,IAAIjC,OAAOkC,eAAeN,GAC5C,OAAOrB,EAAEc,KAAKY,EAAYE,aAAaP,EAAOQ,OAAQ,aAEtD,OAAO,QAvBJ7B,EAAEc,KAAK,Q,cCgCN,gBAAa,W,IDpCd,IAAsBH,EAC1BC,EAASH,M,YCkCP,K,qQAIF,IAGC,gBAAC,WAAc,KACX,gBAACL,EAAS,KAAKV,IACf,gBAAC,EAAAoC,cAAa,KACV,gBAAC,EAAAC,QAAO,KAEAzB,GACI,gBAAC,EAAA0B,aAAY,CAACC,KAAM,EAAOC,MAAM,iCAC5B,SAAC,G,IAACC,EAAO,UAAM,OACZ,gCAEQC,OAAOC,OAAO/B,GAAWgC,KAAI,SAACC,GAGxB,OACF,gBAAC,EAAAC,UAAS,CAACC,IAAKF,EAAML,MAAOA,MAAOK,EAAML,OAElCK,EAAMG,KAAKJ,KAAI,SAACK,GAAa,OACzB,gBAAC,EAAAC,SAAQ,CAACH,IAAKE,EAASE,IAAKZ,MAAM,EAAOa,QAAS,YApD5F,SAACH,EAAUjD,G,MACxBqD,EAA8B,QAAtB,EAAM,OAANtD,aAAM,IAANA,YAAM,EAANA,OAAQuD,sBAAc,eAAEC,WAAW,GAE5CF,GASDA,EAAMG,cAAgBH,EAAMI,WAC5BJ,EAAMK,iBAGVL,EAAMM,WAAWC,SAASC,eAAeZ,KAZrCa,QAAQC,MAAM,wEAiD8CC,CAAef,EAASE,KAExBV,MAECQ,EAAST,wBAiB3E,yBAEH,IAAAyB,WAAU,mBAAoB,qCAAsCzD,I","sources":["webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"compose\"]","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"hooks\"]","webpack:///./js/src/GFSVG.tsx","webpack:///./js/src/helpers/getMergeTags.ts","webpack:///./js/src/gutenberg.tsx"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","import * as React from '@wordpress/element';\n\nconst GFSVG = (props) => (\n    <svg viewBox=\"-15 77 581 640\" width={24} height={24} {...props}>\n        <path\n            fill=\"#1e1e1e\"\n            d=\"M489.5 227L315.9 126.8c-22.1-12.8-58.4-12.8-80.5 0L61.8 227c-22.1 12.8-40.3 44.2-40.3 69.7v200.5c0 25.6 18.1 56.9 40.3 69.7l173.6 100.2c22.1 12.8 58.4 12.8 80.5 0L489.5 567c22.2-12.8 40.3-44.2 40.3-69.7V296.8c0-25.6-18.1-57-40.3-69.8zM401 300.4v59.3H241v-59.3h160zM163.3 490.9c-16.4 0-29.6-13.3-29.6-29.6 0-16.4 13.3-29.6 29.6-29.6s29.6 13.3 29.6 29.6-13.3 29.6-29.6 29.6zm0-131.2c-16.4 0-29.6-13.3-29.6-29.6s13.3-29.6 29.6-29.6 29.6 13.3 29.6 29.6-13.3 29.6-29.6 29.6zM241 490.9v-59.3h160v59.3H241z\"\n        />\n    </svg>\n);\n\nexport default GFSVG\n","const $ = window.jQuery;\n\nexport default function getMergeTags(value: number) {\n    const {ajaxurl, gppcmtData} = window;\n\n    if (!gppcmtData.postId || !value) {\n        return $.when(null);\n    }\n\n    return $.when($.post(ajaxurl, {\n        action: 'gppcmt_get_form',\n        nonce: gppcmtData.nonce,\n        formId: value,\n        postId: gppcmtData.postId\n    })).then(function (response) {\n        var result = $.parseJSON(response);\n\n        // if single form is returned get field merge tags\n        if (result.id) {\n            if( typeof window.gf_vars == 'undefined' ) {\n                window.gf_vars = {};\n            }\n\n            window.form = result;\n            window.gf_vars.mergeTags = result.mergeTags;\n\n            var GFMergeTags = new window.gfMergeTagsObj(result);\n            return $.when(GFMergeTags.getMergeTags(result.fields, '#content'));\n        } else {\n            return null;\n        }\n    });\n}","import * as React from '@wordpress/element';\nimport {DropdownMenu, MenuGroup, MenuItem, Toolbar} from '@wordpress/components';\nimport {createHigherOrderComponent} from '@wordpress/compose';\nimport {BlockControls} from '@wordpress/block-editor';\nimport {addFilter} from '@wordpress/hooks';\nimport GFSVG from \"./GFSVG\";\nimport {useEffect, useState} from \"@wordpress/element\";\nimport getMergeTags from \"./helpers/getMergeTags\";\n\nconst insertMergeTag = (mergeTag, props) => {\n    const range = window?.getSelection()?.getRangeAt(0);\n\n    if (!range) {\n        console.error('Unable to add merge tag. window.getSelection() may not be available.');\n        return;\n    }\n\n    /**\n     * If the start offset and end offset are the same, there isn't any select text to replace.\n     * We're inserting/appending.\n     */\n    if (range.startOffset !== range.endOffset) {\n        range.deleteContents();\n    }\n\n    range.insertNode(document.createTextNode(mergeTag));\n};\n\nconst gppcmtToolbar = createHigherOrderComponent((BlockEdit) => {\n    return (props) => {\n        const [mergeTags, setMergeTags] = useState(null);\n\n        useEffect(() => {\n            if (!window.gppcmtData?.initFormId) {\n                return;\n            }\n\n            (async () => {\n                setMergeTags(await getMergeTags(  window.gppcmtData?.initFormId ));\n            })();\n        /* set deps to empty array so this AJAX request only runs on initial mount */\n        }, []);\n\n        return (\n            <React.Fragment>\n                <BlockEdit {...props} />\n                <BlockControls>\n                    <Toolbar>\n                        {\n                            mergeTags && (\n                                <DropdownMenu icon={GFSVG} label=\"Select a merge tag to insert\">\n                                    {({onClose}) => (\n                                        <>\n                                            {\n                                                Object.values(mergeTags).map((group: {\n                                                    label: string,\n                                                    tags: { tag: string, label: string }[]\n                                                }) => (\n                                                    <MenuGroup key={group.label} label={group.label}>\n                                                        {\n                                                            group.tags.map((mergeTag) => (\n                                                                <MenuItem key={mergeTag.tag} icon={false} onClick={() => {\n                                                                    insertMergeTag(mergeTag.tag, props);\n\n                                                                    onClose();\n                                                                }}>\n                                                                    {mergeTag.label}\n                                                                </MenuItem>\n                                                            ))\n                                                        }\n                                                    </MenuGroup>\n                                                ))\n                                            }\n                                        </>\n                                    )}\n                                </DropdownMenu>\n                            )\n                        }\n                    </Toolbar>\n                </BlockControls>\n            </React.Fragment>\n        );\n    };\n}, \"withInspectorControl\");\n\naddFilter('editor.BlockEdit', 'gp-post-content-merge-tags/toolbar', gppcmtToolbar);"],"names":["window","props","viewBox","width","height","fill","d","$","jQuery","gppcmtToolbar","createHigherOrderComponent","BlockEdit","useState","mergeTags","setMergeTags","useEffect","gppcmtData","initFormId","value","ajaxurl","postId","when","post","action","nonce","formId","then","response","result","parseJSON","id","gf_vars","form","GFMergeTags","gfMergeTagsObj","getMergeTags","fields","BlockControls","Toolbar","DropdownMenu","icon","label","onClose","Object","values","map","group","MenuGroup","key","tags","mergeTag","MenuItem","tag","onClick","range","getSelection","getRangeAt","startOffset","endOffset","deleteContents","insertNode","document","createTextNode","console","error","insertMergeTag","addFilter"],"sourceRoot":""}